{"ast":null,"code":"import _slicedToArray from \"/home/bnhviet/maptuyphuoc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/bnhviet/maptuyphuoc/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Data from './data/machineSite.json';\nimport Layer from './data/layer.json';\nimport rice from './assets/rice.png';\nimport Map from './components/baseMap';\nimport { MapContainer, TileLayer, Marker, Polyline, Popup, Tooltip } from 'react-leaflet';\nimport L from 'leaflet';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _this = this;\n\n  var position = [13.824869, 109.146137];\n\n  var _useState = useState(\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png \"),\n      _useState2 = _slicedToArray(_useState, 2),\n      map = _useState2[0],\n      setMap = _useState2[1];\n\n  var _useState3 = useState(\"map1\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      status = _useState4[0],\n      setFilterMap = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      mapChange = _useState6[0],\n      setMapChange = _useState6[1];\n\n  var myIcon = L.icon({\n    iconUrl: rice,\n    iconRetinaUrl: rice,\n    iconAnchor: [5, 55],\n    popupAnchor: [10, -44],\n    iconSize: [50, 50]\n  });\n\n  function handleSetMap() {\n    switch (status) {\n      case 'map1':\n        setMapChange(setMap(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"));\n        break;\n\n      case 'map2':\n        setMapChange(\"setMap('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png')\");\n        break;\n\n      default:\n        setFilterMap(\"map\");\n        break;\n    }\n  } // useEffect(()=>{\n  //   handleSetMap()\n  // },[map, status])\n\n\n  console.log(status);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    style: {\n      height: '100vh',\n      width: '100wh'\n    },\n    center: position,\n    zoom: 12,\n    scrollWheelZoom: true,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\"></a> contributors\",\n      url: map\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), Data.map(function (data) {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        icon: myIcon,\n        center: [data.gps.latitude, data.gps.longtitude],\n        position: [data.gps.latitude, data.gps.longtitude],\n        radius: 800,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, _this)\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(Map, {\n      setMap: handleSetMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }, this), Layer.map(function (data) {\n      return /*#__PURE__*/_jsxDEV(Polyline, {\n        className: \"background-container\",\n        pathOptions: data.style,\n        positions: data.coordinates,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, _this)\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"MFEW5BwqANnh+7gPaVjZbTTOrXc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bnhviet/maptuyphuoc/src/App.js"],"names":["Data","Layer","rice","Map","MapContainer","TileLayer","Marker","Polyline","Popup","Tooltip","L","useEffect","useState","App","position","map","setMap","status","setFilterMap","mapChange","setMapChange","myIcon","icon","iconUrl","iconRetinaUrl","iconAnchor","popupAnchor","iconSize","handleSetMap","console","log","height","width","data","gps","latitude","longtitude","name","id","style","coordinates"],"mappings":"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","sourcesContent":["import Data from './data/machineSite.json';\nimport Layer from './data/layer.json'\nimport rice from './assets/rice.png'\nimport Map from './components/baseMap'\nimport { MapContainer, TileLayer, Marker,Polyline,Popup, Tooltip } from 'react-leaflet'\nimport L from 'leaflet';\nimport { useEffect, useState } from 'react';\n\n\nfunction App() {\n    const position = [13.824869, 109.146137]\n    const [map,setMap] = useState(\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png \")\n    const [status, setFilterMap] = useState(\"map1\")\n    const [mapChange, setMapChange] = useState(\"\")\n  \n    const myIcon = L.icon({\n      iconUrl: rice,\n      iconRetinaUrl: rice,\n      iconAnchor: [5, 55],\n      popupAnchor: [10, -44],\n      iconSize: [50, 50],\n  });\n\n\n  function handleSetMap() {\n    switch(status){\n      case 'map1': \n     \n      setMapChange( setMap(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"))\n      break\n      case 'map2':\n        setMapChange(\"setMap('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png')\")\n      break\n      default:\n      setFilterMap(\"map\")\n        break\n    }\n  }\n  // useEffect(()=>{\n  //   handleSetMap()\n  // },[map, status])\n  console.log(status)\n    return (\n      \n        <MapContainer style={{ height: '100vh', width: '100wh' }} center={position} zoom={12} scrollWheelZoom={true}>\n        \n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\"></a> contributors'\n            url={map}\n          />\n\n            {Data.map(data =>(\n                <Marker  key={data.id}  icon={myIcon} center={[data.gps.latitude,data.gps.longtitude]} position={[data.gps.latitude,data.gps.longtitude]} radius={800}>\n                  <Popup>\n                    {data.name}\n                 </Popup>\n                 {/* <Tooltip direction=\"center\" style={{fontSize:10}} fontSize={10} opacity={10} permanent>\n                  {data.name}\n                </Tooltip> */}\n                </Marker>\n            ))}\n              \n              <Map setMap = {handleSetMap}/>\n            {Layer.map(data =>(\n                <Polyline key={data.id} className = \"background-container\"  pathOptions={data.style} positions={data.coordinates}>\n              <Popup>\n                    {data.name}\n                 </Popup>\n                </Polyline>\n            ))}\n        </MapContainer>\n         \n    );\n  }\n\n  export default App;\n"]},"metadata":{},"sourceType":"module"}